name: Checkin via Action

on:
  workflow_dispatch:

  push:
    branches: 
      - master
    paths:
      - '.github/workflows/Checkin.yml'

  schedule:
    - cron: 17 */8 * * *

env:
  TG_TOKEN: ${{ secrets.TG_TOKEN }}
  TG_CHATID: ${{ secrets.TG_CHATID }}

jobs:
  misc:
    name: Miscellaneous Sites
    runs-on: ubuntu-latest
    steps:
      - name: Sleep Random Time
        run: sleep $(shuf -i 10-60 -n 1)
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install dependencies
        run: python -m pip install --upgrade requests cfscrape
      - name: BYZH Check in
        env:
          COOKIE: ${{ secrets.BYZH_COOKIE }}
        run: python Checkin/buyizhihuo.py || echo "BYZH_FAIL=true" >> $GITHUB_ENV
      - name: Notify
        if: env.BYZH_FAIL
        run: |
          [ $BYZH_FAIL ] && python Notify.py '不移之火'

  hostloc_get_points:
    name: Hostloc Get Points
    runs-on: ubuntu-latest
    steps:
      - name: Sleep Random Time
        run: sleep $(shuf -i 10-60 -n 1)
      - name: Set Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install dependencies
        run: |
          git clone --depth 1 https://github.com/xirikm/hostloc-auto-get-points checkin
          python -m pip install --upgrade requests pyaes
      - name: Get points
        id: hostloc_get_points
        env:
          HOSTLOC_USERNAME: ${{ secrets.HOSTLOC_USERNAME }}
          HOSTLOC_PASSWORD: ${{ secrets.HOSTLOC_PASSWORD }}
        run: python checkin/hostloc_get_points.py || echo "::set-output name=status::Error"
      - uses: actions/checkout@v2
        if: steps.hostloc_get_points.outputs.status == 'Error'
      - name: Notify
        if: steps.hostloc_get_points.outputs.status == 'Error'
        run: python Notify.py 'Hostloc'
          
  tieba_checkin:
    name: TieBa Check in
    runs-on: ubuntu-latest
    steps:
      - name: Sleep Random Time
        run: sleep $(shuf -i 10-60 -n 1)
      - name: Set Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: Install dependencies
        run: |
          git clone --depth 1 https://github.com/ghosx/tieba checkin
          python -m pip install --upgrade requests
      - name: Check in
        id: tieba_checkin
        env:
          BDUSS: ${{ secrets.BAIDU_BDUSS }}
        run: python checkin/main.py || echo "::set-output name=status::Error"
      - uses: actions/checkout@v2
        if: steps.tieba_checkin.outputs.status == 'Error'
      - name: Notify
        if: steps.tieba_checkin.outputs.status == 'Error'
        run: python Notify.py '贴吧'
  
  cloud189:
    name: Cloud189 Check in
    runs-on: ubuntu-latest
    steps:
      - name: Sleep Random Time
        run: sleep $(shuf -i 10-60 -n 1)
      - name: Set Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install dependencies
        run: |
          git clone --depth 1 https://github.com/mengshouer/CheckinBox checkin
          pip3 install -r checkin/requirements.txt
      - name: Checkin
        id: cloud189_checkin
        env:
          username: ${{ secrets.CLOUD189_USER }}
          password: ${{ secrets.CLOUD189_PW }}
        run: |
          python checkin/Cloud189Checkin/C189CheckinForSCF.py > msg && cat msg
          [[ $(grep '出错' msg) ]] && echo "::set-output name=status::Error" || true
      - uses: actions/checkout@v2
        if: steps.cloud189_checkin.outputs.status == 'Error'
      - name: Notify
        if: steps.cloud189_checkin.outputs.status == 'Error'
        run: python Notify.py '天翼云盘'

  pojie:
    name: 52Pojie Check in
    runs-on: ubuntu-latest
    steps:
      - name: Sleep Random Time
        run: sleep $(shuf -i 10-60 -n 1)
      - name: Set Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install dependencies
        run: |
          git clone --depth 1 https://github.com/mengshouer/CheckinBox checkin
          pip3 install -r checkin/requirements.txt
      - name: Checkin
        id: pojie_checkin
        env:
          cookie_52pj: ${{ secrets.PJ_COOKIE }}
        run: |
          python checkin/Checkin52pj/Checkin52pjForSCF.py > msg && cat msg
          [[ $(grep '失效|出错' msg) ]] && echo "::set-output name=status::Error" || true
      - uses: actions/checkout@v2
        if: steps.pojie_checkin.outputs.status == 'Error'
      - name: Notify
        if: steps.pojie_checkin.outputs.status == 'Error'
        run: python Notify.py '吾爱破解'
  
  pt_checkin:
    name: PT Sites Check in
    runs-on: ubuntu-latest
    steps:
      - name: Sleep Random Time
        run: sleep $(shuf -i 10-60 -n 1)
      - name: Check in
        env:
          URL: ${{ secrets.FLEXGET_CONFIG_URL }}
        run: |
          mkdir /tmp/config
          git clone --depth 1 https://github.com/IvonWei/flexget_qbittorrent_mod.git /tmp/config/plugins
          curl -L ${{ secrets.FLEXGET_CONFIG_URL }} -o /tmp/config/config.yml
          docker run -d --name flexget -v /tmp/config:/config madwind/flexget
          sleep 60 && docker exec flexget flexget execute && docker rm -f flexget

  bilibili:
    runs-on: ubuntu-latest
    name: BiliBili Check in
    steps: 
      - name: Sleep Random Time
        run: sleep $(shuf -i 10-60 -n 1)
      - name: Set time zone
        run: sudo timedatectl set-timezone 'Asia/Shanghai'
      - name: Clone
        run: git clone --depth 1 https://github.com/RayWangQvQ/BiliBiliTool checkin
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - name: Publish
        run: |
          cd checkin
          dotnet restore
          dotnet build --configuration Release --no-restore
          cd ./src/Ray.BiliBiliTool.Console
          dotnet publish --self-contained false -o ./bin/Publish/net5-dependent
      - name: Run APP
        id: bilibili_checkin
        env:
          Ray_BiliBiliCookie__CookieStr: ${{secrets.BILI_COOKIESTR}}
          Ray_Security__IntervalSecondsBetweenRequestApi: 5
          Ray_DailyTaskConfig__NumberOfCoins: 0
          Ray_DailyTaskConfig__SupportUpIds: 13046,423895
        run: |
          cd checkin
          cd ./src/Ray.BiliBiliTool.Console/bin/Publish/net5-dependent
          dotnet Ray.BiliBiliTool.Console.dll -closeConsoleWhenEnd=1 ${{secrets.OTHERCONFIGS}} || echo "::set-output name=status::Error"
      - name: Set Python
        if: steps.bilibili_checkin.outputs.status == 'Error'
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - uses: actions/checkout@v2
        if: steps.bilibili_checkin.outputs.status == 'Error'
      - name: Notify
        if: steps.bilibili_checkin.outputs.status == 'Error'
        run: python -m pip install --upgrade requests && python Notify.py '哔哩哔哩'

  smzdm:
    runs-on: ubuntu-latest
    name: SMZDM Check in
    steps:
      - name: Sleep Random Time
        run: sleep $(shuf -i 10-60 -n 1)
      - name: Clone
        run: git clone --depth 1 https://github.com/jiegto/Actions_smzdm checkin
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: Install dependencies
        run: cd checkin && npm install
      - name: Check in
        id: smzdm_checkin
        run: |
          cd checkin && node function/smzdm.js > msg && cat msg
          [[ $(grep 'Error|null' msg) ]] && echo "::set-output name=status::Error" || true
        env:
          SMZDM_COOKIE: ${{ secrets.SMZDM_COOKIE }}
          SMZDM_USER: ${{ secrets.SMZDM_USER }}
          SMZDM_PASS: ${{ secrets.SMZDM_PASS }}
      - name: Set Python
        if: steps.smzdm_checkin.outputs.status == 'Error'
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - uses: actions/checkout@v2
        if: steps.smzdm_checkin.outputs.status == 'Error'
      - name: Notify
        if: steps.smzdm_checkin.outputs.status == 'Error'
        run: python -m pip install --upgrade requests && python Notify.py '什么值得买'

  unicom:
    runs-on: ubuntu-latest
    name: UNICOM Check in
    steps:
      - name: Sleep Random Time
        run: sleep $(shuf -i 10-60 -n 1)
      - name: Clone
        run: git clone --depth 1 https://github.com/lunnlew/AutoSignMachine checkin
      - name: Set time zone
        run: sudo timedatectl set-timezone 'Asia/Shanghai'
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: Install dependencies
        run: cd checkin && npm install
      - name: Run Unicom daily task
        id: unicom_checkin
        env:
          user: ${{secrets.UNICOM_USER}}
          password: ${{secrets.UNICOM_PASS}}
          appid: ${{secrets.UNICOM_APPID}}
        run: |
          cd checkin && node index.js unicom --user=${user} --password=${password} --appid=${appid} > msg && cat msg
          [[ $(grep 'Error' msg) ]] && echo "::set-output name=status::Error" || true
      - name: Set Python
        if: steps.unicom_checkin.outputs.status == 'Error'
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - uses: actions/checkout@v2
        if: steps.unicom_checkin.outputs.status == 'Error'
      - name: Notify
        if: steps.unicom_checkin.outputs.status == 'Error'
        run: python -m pip install --upgrade requests && python Notify.py '联通营业厅'


